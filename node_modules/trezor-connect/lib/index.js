"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
var _exportNames = {
  UI_EVENT: true,
  DEVICE_EVENT: true,
  RESPONSE_EVENT: true,
  TRANSPORT_EVENT: true,
  BLOCKCHAIN_EVENT: true,
  TRANSPORT: true,
  IFRAME: true,
  UI: true,
  DEVICE: true,
  BLOCKCHAIN: true
};
exports.BLOCKCHAIN = exports.DEVICE = exports.UI = exports.IFRAME = exports.TRANSPORT = exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _constants = require("./constants");

exports.UI_EVENT = _constants.UI_EVENT;
exports.DEVICE_EVENT = _constants.DEVICE_EVENT;
exports.RESPONSE_EVENT = _constants.RESPONSE_EVENT;
exports.TRANSPORT_EVENT = _constants.TRANSPORT_EVENT;
exports.BLOCKCHAIN_EVENT = _constants.BLOCKCHAIN_EVENT;

var TRANSPORT = _interopRequireWildcard(require("./constants/transport"));

exports.TRANSPORT = TRANSPORT;

var IFRAME = _interopRequireWildcard(require("./constants/iframe"));

exports.IFRAME = IFRAME;

var UI = _interopRequireWildcard(require("./constants/ui"));

exports.UI = UI;

var DEVICE = _interopRequireWildcard(require("./constants/device"));

exports.DEVICE = DEVICE;

var BLOCKCHAIN = _interopRequireWildcard(require("./constants/blockchain"));

exports.BLOCKCHAIN = BLOCKCHAIN;

var $T = _interopRequireWildcard(require("./types"));

var _node = require("./env/node");

var _blockchainEvent = require("./types/blockchainEvent");

Object.keys(_blockchainEvent).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _blockchainEvent[key];
});

var _account = require("./types/account");

Object.keys(_account).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _account[key];
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var TrezorConnect = function TrezorConnect() {};

(0, _defineProperty2["default"])(TrezorConnect, "manifest", function (data) {
  (0, _node.manifest)(data);
});
(0, _defineProperty2["default"])(TrezorConnect, "getSettings", function _callee() {
  return _regenerator["default"].async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return _regenerator["default"].awrap((0, _node.getSettings)());

        case 2:
          return _context.abrupt("return", _context.sent);

        case 3:
        case "end":
          return _context.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "init", function _callee2(settings) {
  return _regenerator["default"].async(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return _regenerator["default"].awrap((0, _node.init)(settings));

        case 2:
          return _context2.abrupt("return", _context2.sent);

        case 3:
        case "end":
          return _context2.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "on", function (type, fn) {
  _node.eventEmitter.on(type, fn);
});
(0, _defineProperty2["default"])(TrezorConnect, "off", function (type, fn) {
  _node.eventEmitter.removeListener(type, fn);
});
(0, _defineProperty2["default"])(TrezorConnect, "uiResponse", function (response) {
  (0, _node.uiResponse)(response);
});
(0, _defineProperty2["default"])(TrezorConnect, "blockchainDisconnect", function _callee3(params) {
  return _regenerator["default"].async(function _callee3$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'blockchainDisconnect'
          }, params)));

        case 2:
          return _context3.abrupt("return", _context3.sent);

        case 3:
        case "end":
          return _context3.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "blockchainEstimateFee", function _callee4(params) {
  return _regenerator["default"].async(function _callee4$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'blockchainEstimateFee'
          }, params)));

        case 2:
          return _context4.abrupt("return", _context4.sent);

        case 3:
        case "end":
          return _context4.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "blockchainGetTransactions", function _callee5(params) {
  return _regenerator["default"].async(function _callee5$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'blockchainGetTransactions'
          }, params)));

        case 2:
          return _context5.abrupt("return", _context5.sent);

        case 3:
        case "end":
          return _context5.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "blockchainSubscribe", function _callee6(params) {
  return _regenerator["default"].async(function _callee6$(_context6) {
    while (1) {
      switch (_context6.prev = _context6.next) {
        case 0:
          _context6.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'blockchainSubscribe'
          }, params)));

        case 2:
          return _context6.abrupt("return", _context6.sent);

        case 3:
        case "end":
          return _context6.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "blockchainUnsubscribe", function _callee7(params) {
  return _regenerator["default"].async(function _callee7$(_context7) {
    while (1) {
      switch (_context7.prev = _context7.next) {
        case 0:
          _context7.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'blockchainUnsubscribe'
          }, params)));

        case 2:
          return _context7.abrupt("return", _context7.sent);

        case 3:
        case "end":
          return _context7.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "customMessage", function _callee8(params) {
  return _regenerator["default"].async(function _callee8$(_context8) {
    while (1) {
      switch (_context8.prev = _context8.next) {
        case 0:
          _context8.next = 2;
          return _regenerator["default"].awrap((0, _node.customMessage)(params));

        case 2:
          return _context8.abrupt("return", _context8.sent);

        case 3:
        case "end":
          return _context8.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "requestLogin", function _callee9(params) {
  return _regenerator["default"].async(function _callee9$(_context9) {
    while (1) {
      switch (_context9.prev = _context9.next) {
        case 0:
          _context9.next = 2;
          return _regenerator["default"].awrap((0, _node.requestLogin)(params));

        case 2:
          return _context9.abrupt("return", _context9.sent);

        case 3:
        case "end":
          return _context9.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "resetDevice", function _callee10(params) {
  return _regenerator["default"].async(function _callee10$(_context10) {
    while (1) {
      switch (_context10.prev = _context10.next) {
        case 0:
          _context10.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'resetDevice'
          }, params)));

        case 2:
          return _context10.abrupt("return", _context10.sent);

        case 3:
        case "end":
          return _context10.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "cardanoGetAddress", function _callee11(params) {
  var useEventListener;
  return _regenerator["default"].async(function _callee11$(_context11) {
    while (1) {
      switch (_context11.prev = _context11.next) {
        case 0:
          useEventListener = _node.eventEmitter.listenerCount(UI.ADDRESS_VALIDATION) > 0;
          _context11.next = 3;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'cardanoGetAddress'
          }, params, {
            useEventListener: useEventListener
          })));

        case 3:
          return _context11.abrupt("return", _context11.sent);

        case 4:
        case "end":
          return _context11.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "cardanoGetPublicKey", function _callee12(params) {
  return _regenerator["default"].async(function _callee12$(_context12) {
    while (1) {
      switch (_context12.prev = _context12.next) {
        case 0:
          _context12.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'cardanoGetPublicKey'
          }, params)));

        case 2:
          return _context12.abrupt("return", _context12.sent);

        case 3:
        case "end":
          return _context12.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "cardanoSignTransaction", function _callee13(params) {
  return _regenerator["default"].async(function _callee13$(_context13) {
    while (1) {
      switch (_context13.prev = _context13.next) {
        case 0:
          _context13.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'cardanoSignTransaction'
          }, params)));

        case 2:
          return _context13.abrupt("return", _context13.sent);

        case 3:
        case "end":
          return _context13.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "cipherKeyValue", function _callee14(params) {
  return _regenerator["default"].async(function _callee14$(_context14) {
    while (1) {
      switch (_context14.prev = _context14.next) {
        case 0:
          _context14.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'cipherKeyValue'
          }, params)));

        case 2:
          return _context14.abrupt("return", _context14.sent);

        case 3:
        case "end":
          return _context14.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "composeTransaction", function _callee15(params) {
  return _regenerator["default"].async(function _callee15$(_context15) {
    while (1) {
      switch (_context15.prev = _context15.next) {
        case 0:
          _context15.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'composeTransaction'
          }, params)));

        case 2:
          return _context15.abrupt("return", _context15.sent);

        case 3:
        case "end":
          return _context15.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "debugLinkDecision", function _callee16(params) {
  return _regenerator["default"].async(function _callee16$(_context16) {
    while (1) {
      switch (_context16.prev = _context16.next) {
        case 0:
          _context16.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'debugLinkDecision'
          }, params)));

        case 2:
          return _context16.abrupt("return", _context16.sent);

        case 3:
        case "end":
          return _context16.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "debugLinkGetState", function _callee17(params) {
  return _regenerator["default"].async(function _callee17$(_context17) {
    while (1) {
      switch (_context17.prev = _context17.next) {
        case 0:
          _context17.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'debugLinkGetState'
          }, params)));

        case 2:
          return _context17.abrupt("return", _context17.sent);

        case 3:
        case "end":
          return _context17.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "ethereumGetAddress", function _callee18(params) {
  var useEventListener;
  return _regenerator["default"].async(function _callee18$(_context18) {
    while (1) {
      switch (_context18.prev = _context18.next) {
        case 0:
          useEventListener = _node.eventEmitter.listenerCount(UI.ADDRESS_VALIDATION) > 0;
          _context18.next = 3;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'ethereumGetAddress'
          }, params, {
            useEventListener: useEventListener
          })));

        case 3:
          return _context18.abrupt("return", _context18.sent);

        case 4:
        case "end":
          return _context18.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "ethereumGetPublicKey", function _callee19(params) {
  return _regenerator["default"].async(function _callee19$(_context19) {
    while (1) {
      switch (_context19.prev = _context19.next) {
        case 0:
          _context19.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'ethereumGetPublicKey'
          }, params)));

        case 2:
          return _context19.abrupt("return", _context19.sent);

        case 3:
        case "end":
          return _context19.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "ethereumSignMessage", function _callee20(params) {
  return _regenerator["default"].async(function _callee20$(_context20) {
    while (1) {
      switch (_context20.prev = _context20.next) {
        case 0:
          _context20.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'ethereumSignMessage'
          }, params)));

        case 2:
          return _context20.abrupt("return", _context20.sent);

        case 3:
        case "end":
          return _context20.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "ethereumSignTransaction", function _callee21(params) {
  return _regenerator["default"].async(function _callee21$(_context21) {
    while (1) {
      switch (_context21.prev = _context21.next) {
        case 0:
          _context21.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'ethereumSignTransaction'
          }, params)));

        case 2:
          return _context21.abrupt("return", _context21.sent);

        case 3:
        case "end":
          return _context21.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "ethereumVerifyMessage", function _callee22(params) {
  return _regenerator["default"].async(function _callee22$(_context22) {
    while (1) {
      switch (_context22.prev = _context22.next) {
        case 0:
          _context22.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'ethereumVerifyMessage'
          }, params)));

        case 2:
          return _context22.abrupt("return", _context22.sent);

        case 3:
        case "end":
          return _context22.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "getAccountInfo", function _callee23(params) {
  return _regenerator["default"].async(function _callee23$(_context23) {
    while (1) {
      switch (_context23.prev = _context23.next) {
        case 0:
          _context23.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'getAccountInfo'
          }, params)));

        case 2:
          return _context23.abrupt("return", _context23.sent);

        case 3:
        case "end":
          return _context23.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "getAddress", function _callee24(params) {
  var useEventListener;
  return _regenerator["default"].async(function _callee24$(_context24) {
    while (1) {
      switch (_context24.prev = _context24.next) {
        case 0:
          useEventListener = _node.eventEmitter.listenerCount(UI.ADDRESS_VALIDATION) > 0;
          _context24.next = 3;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'getAddress'
          }, params, {
            useEventListener: useEventListener
          })));

        case 3:
          return _context24.abrupt("return", _context24.sent);

        case 4:
        case "end":
          return _context24.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "getDeviceState", function _callee25(params) {
  return _regenerator["default"].async(function _callee25$(_context25) {
    while (1) {
      switch (_context25.prev = _context25.next) {
        case 0:
          _context25.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'getDeviceState'
          }, params)));

        case 2:
          return _context25.abrupt("return", _context25.sent);

        case 3:
        case "end":
          return _context25.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "getFeatures", function _callee26(params) {
  return _regenerator["default"].async(function _callee26$(_context26) {
    while (1) {
      switch (_context26.prev = _context26.next) {
        case 0:
          _context26.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'getFeatures'
          }, params)));

        case 2:
          return _context26.abrupt("return", _context26.sent);

        case 3:
        case "end":
          return _context26.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "getPublicKey", function _callee27(params) {
  return _regenerator["default"].async(function _callee27$(_context27) {
    while (1) {
      switch (_context27.prev = _context27.next) {
        case 0:
          _context27.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'getPublicKey'
          }, params)));

        case 2:
          return _context27.abrupt("return", _context27.sent);

        case 3:
        case "end":
          return _context27.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "liskGetAddress", function _callee28(params) {
  var useEventListener;
  return _regenerator["default"].async(function _callee28$(_context28) {
    while (1) {
      switch (_context28.prev = _context28.next) {
        case 0:
          useEventListener = _node.eventEmitter.listenerCount(UI.ADDRESS_VALIDATION) > 0;
          _context28.next = 3;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'liskGetAddress'
          }, params, {
            useEventListener: useEventListener
          })));

        case 3:
          return _context28.abrupt("return", _context28.sent);

        case 4:
        case "end":
          return _context28.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "liskGetPublicKey", function _callee29(params) {
  return _regenerator["default"].async(function _callee29$(_context29) {
    while (1) {
      switch (_context29.prev = _context29.next) {
        case 0:
          _context29.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'liskGetPublicKey'
          }, params)));

        case 2:
          return _context29.abrupt("return", _context29.sent);

        case 3:
        case "end":
          return _context29.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "liskSignMessage", function _callee30(params) {
  return _regenerator["default"].async(function _callee30$(_context30) {
    while (1) {
      switch (_context30.prev = _context30.next) {
        case 0:
          _context30.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'liskSignMessage'
          }, params)));

        case 2:
          return _context30.abrupt("return", _context30.sent);

        case 3:
        case "end":
          return _context30.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "liskSignTransaction", function _callee31(params) {
  return _regenerator["default"].async(function _callee31$(_context31) {
    while (1) {
      switch (_context31.prev = _context31.next) {
        case 0:
          _context31.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'liskSignTransaction'
          }, params)));

        case 2:
          return _context31.abrupt("return", _context31.sent);

        case 3:
        case "end":
          return _context31.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "liskVerifyMessage", function _callee32(params) {
  return _regenerator["default"].async(function _callee32$(_context32) {
    while (1) {
      switch (_context32.prev = _context32.next) {
        case 0:
          _context32.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'liskVerifyMessage'
          }, params)));

        case 2:
          return _context32.abrupt("return", _context32.sent);

        case 3:
        case "end":
          return _context32.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "nemGetAddress", function _callee33(params) {
  var useEventListener;
  return _regenerator["default"].async(function _callee33$(_context33) {
    while (1) {
      switch (_context33.prev = _context33.next) {
        case 0:
          useEventListener = _node.eventEmitter.listenerCount(UI.ADDRESS_VALIDATION) > 0;
          _context33.next = 3;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'nemGetAddress'
          }, params, {
            useEventListener: useEventListener
          })));

        case 3:
          return _context33.abrupt("return", _context33.sent);

        case 4:
        case "end":
          return _context33.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "nemSignTransaction", function _callee34(params) {
  return _regenerator["default"].async(function _callee34$(_context34) {
    while (1) {
      switch (_context34.prev = _context34.next) {
        case 0:
          _context34.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'nemSignTransaction'
          }, params)));

        case 2:
          return _context34.abrupt("return", _context34.sent);

        case 3:
        case "end":
          return _context34.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "pushTransaction", function _callee35(params) {
  return _regenerator["default"].async(function _callee35$(_context35) {
    while (1) {
      switch (_context35.prev = _context35.next) {
        case 0:
          _context35.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'pushTransaction'
          }, params)));

        case 2:
          return _context35.abrupt("return", _context35.sent);

        case 3:
        case "end":
          return _context35.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "rippleGetAddress", function _callee36(params) {
  var useEventListener;
  return _regenerator["default"].async(function _callee36$(_context36) {
    while (1) {
      switch (_context36.prev = _context36.next) {
        case 0:
          useEventListener = _node.eventEmitter.listenerCount(UI.ADDRESS_VALIDATION) > 0;
          _context36.next = 3;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'rippleGetAddress'
          }, params, {
            useEventListener: useEventListener
          })));

        case 3:
          return _context36.abrupt("return", _context36.sent);

        case 4:
        case "end":
          return _context36.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "rippleSignTransaction", function _callee37(params) {
  return _regenerator["default"].async(function _callee37$(_context37) {
    while (1) {
      switch (_context37.prev = _context37.next) {
        case 0:
          _context37.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'rippleSignTransaction'
          }, params)));

        case 2:
          return _context37.abrupt("return", _context37.sent);

        case 3:
        case "end":
          return _context37.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "signMessage", function _callee38(params) {
  return _regenerator["default"].async(function _callee38$(_context38) {
    while (1) {
      switch (_context38.prev = _context38.next) {
        case 0:
          _context38.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'signMessage'
          }, params)));

        case 2:
          return _context38.abrupt("return", _context38.sent);

        case 3:
        case "end":
          return _context38.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "signTransaction", function _callee39(params) {
  return _regenerator["default"].async(function _callee39$(_context39) {
    while (1) {
      switch (_context39.prev = _context39.next) {
        case 0:
          _context39.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'signTransaction'
          }, params)));

        case 2:
          return _context39.abrupt("return", _context39.sent);

        case 3:
        case "end":
          return _context39.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "stellarGetAddress", function _callee40(params) {
  var useEventListener;
  return _regenerator["default"].async(function _callee40$(_context40) {
    while (1) {
      switch (_context40.prev = _context40.next) {
        case 0:
          useEventListener = _node.eventEmitter.listenerCount(UI.ADDRESS_VALIDATION) > 0;
          _context40.next = 3;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'stellarGetAddress'
          }, params, {
            useEventListener: useEventListener
          })));

        case 3:
          return _context40.abrupt("return", _context40.sent);

        case 4:
        case "end":
          return _context40.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "stellarSignTransaction", function _callee41(params) {
  return _regenerator["default"].async(function _callee41$(_context41) {
    while (1) {
      switch (_context41.prev = _context41.next) {
        case 0:
          _context41.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'stellarSignTransaction'
          }, params)));

        case 2:
          return _context41.abrupt("return", _context41.sent);

        case 3:
        case "end":
          return _context41.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "tezosGetAddress", function _callee42(params) {
  var useEventListener;
  return _regenerator["default"].async(function _callee42$(_context42) {
    while (1) {
      switch (_context42.prev = _context42.next) {
        case 0:
          useEventListener = _node.eventEmitter.listenerCount(UI.ADDRESS_VALIDATION) > 0;
          _context42.next = 3;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'tezosGetAddress'
          }, params, {
            useEventListener: useEventListener
          })));

        case 3:
          return _context42.abrupt("return", _context42.sent);

        case 4:
        case "end":
          return _context42.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "tezosGetPublicKey", function _callee43(params) {
  return _regenerator["default"].async(function _callee43$(_context43) {
    while (1) {
      switch (_context43.prev = _context43.next) {
        case 0:
          _context43.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'tezosGetPublicKey'
          }, params)));

        case 2:
          return _context43.abrupt("return", _context43.sent);

        case 3:
        case "end":
          return _context43.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "tezosSignTransaction", function _callee44(params) {
  return _regenerator["default"].async(function _callee44$(_context44) {
    while (1) {
      switch (_context44.prev = _context44.next) {
        case 0:
          _context44.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'tezosSignTransaction'
          }, params)));

        case 2:
          return _context44.abrupt("return", _context44.sent);

        case 3:
        case "end":
          return _context44.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "eosGetPublicKey", function _callee45(params) {
  return _regenerator["default"].async(function _callee45$(_context45) {
    while (1) {
      switch (_context45.prev = _context45.next) {
        case 0:
          _context45.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'eosGetPublicKey'
          }, params)));

        case 2:
          return _context45.abrupt("return", _context45.sent);

        case 3:
        case "end":
          return _context45.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "eosSignTransaction", function _callee46(params) {
  return _regenerator["default"].async(function _callee46$(_context46) {
    while (1) {
      switch (_context46.prev = _context46.next) {
        case 0:
          _context46.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'eosSignTransaction'
          }, params)));

        case 2:
          return _context46.abrupt("return", _context46.sent);

        case 3:
        case "end":
          return _context46.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "binanceGetAddress", function _callee47(params) {
  var useEventListener;
  return _regenerator["default"].async(function _callee47$(_context47) {
    while (1) {
      switch (_context47.prev = _context47.next) {
        case 0:
          useEventListener = _node.eventEmitter.listenerCount(UI.ADDRESS_VALIDATION) > 0;
          _context47.next = 3;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'binanceGetAddress'
          }, params, {
            useEventListener: useEventListener
          })));

        case 3:
          return _context47.abrupt("return", _context47.sent);

        case 4:
        case "end":
          return _context47.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "binanceGetPublicKey", function _callee48(params) {
  return _regenerator["default"].async(function _callee48$(_context48) {
    while (1) {
      switch (_context48.prev = _context48.next) {
        case 0:
          _context48.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'binanceGetPublicKey'
          }, params)));

        case 2:
          return _context48.abrupt("return", _context48.sent);

        case 3:
        case "end":
          return _context48.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "binanceSignTransaction", function _callee49(params) {
  return _regenerator["default"].async(function _callee49$(_context49) {
    while (1) {
      switch (_context49.prev = _context49.next) {
        case 0:
          _context49.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'binanceSignTransaction'
          }, params)));

        case 2:
          return _context49.abrupt("return", _context49.sent);

        case 3:
        case "end":
          return _context49.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "verifyMessage", function _callee50(params) {
  return _regenerator["default"].async(function _callee50$(_context50) {
    while (1) {
      switch (_context50.prev = _context50.next) {
        case 0:
          _context50.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'verifyMessage'
          }, params)));

        case 2:
          return _context50.abrupt("return", _context50.sent);

        case 3:
        case "end":
          return _context50.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "wipeDevice", function _callee51(params) {
  return _regenerator["default"].async(function _callee51$(_context51) {
    while (1) {
      switch (_context51.prev = _context51.next) {
        case 0:
          _context51.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'wipeDevice'
          }, params)));

        case 2:
          return _context51.abrupt("return", _context51.sent);

        case 3:
        case "end":
          return _context51.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "applyFlags", function _callee52(params) {
  return _regenerator["default"].async(function _callee52$(_context52) {
    while (1) {
      switch (_context52.prev = _context52.next) {
        case 0:
          _context52.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'applyFlags'
          }, params)));

        case 2:
          return _context52.abrupt("return", _context52.sent);

        case 3:
        case "end":
          return _context52.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "applySettings", function _callee53(params) {
  return _regenerator["default"].async(function _callee53$(_context53) {
    while (1) {
      switch (_context53.prev = _context53.next) {
        case 0:
          _context53.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'applySettings'
          }, params)));

        case 2:
          return _context53.abrupt("return", _context53.sent);

        case 3:
        case "end":
          return _context53.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "backupDevice", function _callee54() {
  return _regenerator["default"].async(function _callee54$(_context54) {
    while (1) {
      switch (_context54.prev = _context54.next) {
        case 0:
          _context54.next = 2;
          return _regenerator["default"].awrap((0, _node.call)({
            method: 'backupDevice'
          }));

        case 2:
          return _context54.abrupt("return", _context54.sent);

        case 3:
        case "end":
          return _context54.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "changePin", function _callee55(params) {
  return _regenerator["default"].async(function _callee55$(_context55) {
    while (1) {
      switch (_context55.prev = _context55.next) {
        case 0:
          _context55.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'changePin'
          }, params)));

        case 2:
          return _context55.abrupt("return", _context55.sent);

        case 3:
        case "end":
          return _context55.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "firmwareUpdate", function _callee56(params) {
  return _regenerator["default"].async(function _callee56$(_context56) {
    while (1) {
      switch (_context56.prev = _context56.next) {
        case 0:
          _context56.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'firmwareUpdate'
          }, params)));

        case 2:
          return _context56.abrupt("return", _context56.sent);

        case 3:
        case "end":
          return _context56.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "recoveryDevice", function _callee57(params) {
  return _regenerator["default"].async(function _callee57$(_context57) {
    while (1) {
      switch (_context57.prev = _context57.next) {
        case 0:
          _context57.next = 2;
          return _regenerator["default"].awrap((0, _node.call)(_objectSpread({
            method: 'recoveryDevice'
          }, params)));

        case 2:
          return _context57.abrupt("return", _context57.sent);

        case 3:
        case "end":
          return _context57.stop();
      }
    }
  });
});
(0, _defineProperty2["default"])(TrezorConnect, "dispose", function () {
  (0, _node.dispose)();
});
(0, _defineProperty2["default"])(TrezorConnect, "cancel", function (error) {
  (0, _node.cancel)(error);
});
(0, _defineProperty2["default"])(TrezorConnect, "renderWebUSBButton", function (className) {
  (0, _node.renderWebUSBButton)(className);
});
(0, _defineProperty2["default"])(TrezorConnect, "disableWebUSB", function _callee58() {
  return _regenerator["default"].async(function _callee58$(_context58) {
    while (1) {
      switch (_context58.prev = _context58.next) {
        case 0:
          (0, _node.disableWebUSB)();

        case 1:
        case "end":
          return _context58.stop();
      }
    }
  });
});
var _default = TrezorConnect;
exports["default"] = _default;